/* 掛抎厙桴ㄩhttp://www.androidbks.com
* 秷豎iOS諺斻ㄩhttp://www.51work6.com
* 秷豎iOS諺斻婓盄諺斻ㄩhttp://v.51work6.com
* 秷豎iOS諺斻陔檢峚痔ㄩhttp://weibo.com/u/3215753973
* 釬氪峚痔ㄩhttp://weibo.com/516inc
* 夥源csdn痔諦ㄩhttp://blog.csdn.net/tonny_guan
* QQㄩ1575716557 蚘眊ㄩjylong06@163.com
*/ 

package com.god.holywar;


import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.graphics.BitmapFactory;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.widget.AdapterView;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;

import com.work6.designpattern.Scene;
import com.work6.designpattern.Spirit;

/**
 * 茼蚚笢腔蚔牁部劓濬
 * 
 * @author 壽陲汔
 * 
 */
public class HolyWarScene extends Scene {

	private final static String TAG = "HolyWarScene";
	private int[] spiritsImage;
	private String[] spiritsName;

	/** 諉彶秏洘 */
	private Handler handler = new MyHandler();

	/** 盄最傖埜曹講 */
	private ActivityThread thread;

	public HolyWarScene(Context context, String[] spirits) {
		super(context);

		// 掖劓 場宎趙
		Spirit bgSpirit = new Spirit(BitmapFactory.decodeResource(
				getResources(), R.drawable.castle_bg), 0, 0, 0, 0, null);
		addSpirit(bgSpirit);

		this.spiritsName = spirits;
		this.spiritsImage = AppUtil.getBuidingImgId(this.spiritsName);
		// 1#華輸
		Spirit spirit1 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[0]), 225, 26, 0, 0,
				"onTouchEvent1");
		addSpirit(spirit1);

		// 2#華輸
		Spirit spirit2 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[1]), 300, 30, 0, 0,
				"onTouchEvent2");
		addSpirit(spirit2);

		// 3#華輸
		Spirit spirit3 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[2]), 379, 103, 0, 0,
				"onTouchEvent3");
		addSpirit(spirit3);

		// 4#華輸
		Spirit spirit4 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[3]), 149, 45, 0, 0,
				"onTouchEvent4");
		addSpirit(spirit4);

		// 5#華輸
		Spirit spirit5 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[4]), 91, 80, 0, 0, "onTouchEvent5");
		addSpirit(spirit5);

		// 6#華輸
		Spirit spirit6 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[5]), 40, 120, 0, 0,
				"onTouchEvent6");
		addSpirit(spirit6);

		// 7#華輸
		Spirit spirit7 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[6]), 212, 85, 0, 0,
				"onTouchEvent7");
		addSpirit(spirit7);

		// 8#華輸
		Spirit spirit8 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[7]), 163, 128, 0, 0,
				"onTouchEvent8");
		addSpirit(spirit8);

		// 9#華輸
		Spirit spirit9 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[8]), 100, 150, 0, 0,
				"onTouchEvent9");
		addSpirit(spirit9);

		// 10#華輸
		Spirit spirit10 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[9]), 300, 130, 0, 0,
				"onTouchEvent10");
		addSpirit(spirit10);

		// 11#華輸
		Spirit spirit11 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[10]), 246, 175, 0, 0,
				"onTouchEvent11");
		addSpirit(spirit11);

		// 12#華輸
		Spirit spirit12 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[11]), 180, 220, 0, 0,
				"onTouchEvent12");
		addSpirit(spirit12);

		// 13#華輸
		Spirit spirit13 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[12]), 364, 171, 0, 0,
				"onTouchEvent13");
		addSpirit(spirit13);

		// 14#華輸
		Spirit spirit14 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[13]), 304, 220, 0, 0,
				"onTouchEvent14");
		addSpirit(spirit14);

		// 15#華輸
		Spirit spirit15 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[14]), 240, 265, 0, 0,
				"onTouchEvent15");
		addSpirit(spirit15);

		// 16#華輸
		Spirit spirit16 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[15]), 400, 230, 0, 0,
				"onTouchEvent16");
		addSpirit(spirit16);

		// 17#華輸
		Spirit spirit17 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[16]), 45, 10, 0, 0,
				"onTouchEvent17");
		addSpirit(spirit17);

		// 18#華輸
		Spirit spirit18 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[17]), 49, 178, 0, 0,
				"onTouchEvent18");
		addSpirit(spirit18);

		// 19#華輸
		Spirit spirit19 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[18]), 100, 215, 0, 0,
				"onTouchEvent19");
		addSpirit(spirit19);

		// 20#華輸
		Spirit spirit20 = new Spirit(BitmapFactory.decodeResource(
				getResources(), spiritsImage[19]), 196, 278, 0, 0,
				"onTouchEvent20");
		addSpirit(spirit20);

	}

	/**
	 * 揖類1#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent1(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類1#華輸 " + sp.getCoordinates());
		handleSoilid(1);
	}

	/**
	 * 揖類2#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent2(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類2#華輸 " + sp.getCoordinates());
		handleSoilid(2);
	}

	/**
	 * 揖類3#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent3(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類3#華輸 " + sp.getCoordinates());
		handleSoilid(3);
	}

	/**
	 * 揖類4#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent4(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類4#華輸 " + sp.getCoordinates());
		handleSoilid(4);
	}

	/**
	 * 揖類5#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent5(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類5#華輸 " + sp.getCoordinates());
		handleSoilid(5);
	}

	/**
	 * 揖類6#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent6(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類6#華輸 " + sp.getCoordinates());
		handleSoilid(6);
	}

	/**
	 * 揖類7#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent7(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類7#華輸 " + sp.getCoordinates());
		handleSoilid(7);
	}

	/**
	 * 揖類8#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent8(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類8#華輸 " + sp.getCoordinates());
		handleSoilid(8);
	}

	/**
	 * 揖類9#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent9(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類9#華輸 " + sp.getCoordinates());
		handleSoilid(9);
	}

	/**
	 * 揖類10#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent10(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類10#華輸 " + sp.getCoordinates());
		handleSoilid(10);
	}

	/**
	 * 揖類11#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent11(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類11#華輸 " + sp.getCoordinates());
		handleSoilid(11);
	}

	/**
	 * 揖類12#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent12(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類12#華輸 " + sp.getCoordinates());
		handleSoilid(12);
	}

	/**
	 * 揖類13#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent13(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類13#華輸 " + sp.getCoordinates());
		handleSoilid(13);
	}

	/**
	 * 揖類14#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent14(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類14#華輸 " + sp.getCoordinates());
		handleSoilid(14);
	}

	/**
	 * 揖類15#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent15(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類15#華輸 " + sp.getCoordinates());
		handleSoilid(15);
	}

	/**
	 * 揖類16#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent16(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類16#華輸 " + sp.getCoordinates());
		handleSoilid(16);
	}

	/**
	 * 揖類17#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent17(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類17#華輸 " + sp.getCoordinates());
		handleSoilid(17);
	}

	/**
	 * 揖類18#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent18(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類18#華輸 " + sp.getCoordinates());
		handleSoilid(18);
	}

	/**
	 * 揖類19#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent19(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類19#華輸 " + sp.getCoordinates());
		handleSoilid(19);
	}

	/**
	 * 揖類20#華輸
	 * 
	 * @param sp
	 * @param event
	 */
	public void onTouchEvent20(Spirit sp, MotionEvent event) {
		Log.v(TAG, "揖類20#華輸 " + sp.getCoordinates());
		handleSoilid(20);
	}

	/**
	 * 揭燴勤茼華瘍腔珛昢
	 * 
	 * @param soilid
	 *            華輸晤瘍
	 */
	private void handleSoilid(int soilid) {

		JSONArray jsonarr = new JSONArray();
		try {
			jsonarr.put(0, soilid);
			JSONObject param = new JSONObject();
			param.put("actioncode", 14);
			param.put("verifycode", AppUtil.verifycode);
			param.put("data", jsonarr);
			thread = new ActivityThread(param.toString(), "castle.php", soilid,
					14);
			thread.start();
		} catch (JSONException e) {
			e.printStackTrace();
		}
	}

	/**
	 * 粟堤睿揭燴諾璋坢勤趕遺
	 * @param soilid
	 */
	private void handleSpaceLandTowerDialog(final int soilid) {

		//TODO 
	}

	/**
	 * 湍衄桸條膘耟汔撰
	 * 
	 * @param jsonStr
	 * @param soilid
	 */
	private void handleRequestUpgradeRecruitSoldierInfoResult(String jsonStr,
			final int soilid) {

		//TODO
	}

	/**
	 * ぱ籵膘耟汔撰
	 * 
	 * @param jsonStr
	 * @param soilid
	 */
	private void handleRequestUpgradeInfoResult(String jsonStr, final int soilid) {
		//TODO
	}

	/**
	 * 
	 * 桸躁尪條勤趕遺揭燴
	 * 
	 * @param soilid
	 *            華輸晤瘍
	 */
	private void popupRecruitSoldierDialog(final int soilid) {
		//TODO
	}

	/**
	 * 籵徹桸躁尪條陓洘睿芞えㄛ粟堤桸躁尪條杅講勤趕遺
	 * 
	 * @param soldierInfo
	 *            尪條桸躁陓洘
	 * @param img
	 *            桸躁尪條芞えid
	 */
	private void popupRecruitSoldierNumberDialog(final String soldierInfo[],
			int img) {

		//TODO
	}

	/**
	 * 尪條桸躁俇傖隙覃源楊﹝
	 * 
	 * @param jsonStr
	 *            殿隙腔JSON趼睫揹
	 */
	private void handleRequestRecruitSoldierResult(String jsonStr) {
		//TODO
	}

	/**
	 * 萸僻汔撰偌聽腔隙覃揭燴﹝
	 */
	private void handleClickBuildingUpgrade(String jsonStr) {
		String backFlag = "44";
		JSONObject json;
		try {
			json = new JSONObject(jsonStr);
			if (json != null) {
				backFlag = json.getString("upgrade_back_flag");
			}
		} catch (JSONException e) {
			e.printStackTrace();
		}

		if (backFlag.equals("1")) {
			Toast.makeText(this.getContext(), "汔撰笢...", Toast.LENGTH_SHORT)
					.show();
		} else if (backFlag.equals("44")) {
			Toast.makeText(this.getContext(), "杅擂渣昫ㄐ", Toast.LENGTH_LONG)
					.show();
		} else {
			Toast.makeText(this.getContext(), "第蹋祥逋ㄛ祥夔汔撰ㄐ", Toast.LENGTH_SHORT)
					.show();
		}
	}

	class MyHandler extends Handler {

		@Override
		public void handleMessage(Message msg) {

			switch (msg.what) {
			case 0:
				if (msg.obj != null) {
					Map data = (Map) msg.obj;
					Integer soilid = (Integer) data.get("soilid");
					Integer actioncode = (Integer) data.get("actioncode");
					String jsonData = (String) data.get("jsonData");
					if (actioncode == 14) {
						String name = spiritsName[soilid - 1];
						if (name.equals("temple") || name.equals("residence")
								|| name.equals("storehouse")
								|| name.equals("chamber_secrets")
								|| name.equals("meeting_room")
								|| name.equals("demons_pavilion")
								|| name.equals("wall")
								|| name.equals("sawmill")
								|| name.equals("grain_field")
								|| name.equals("land_tower_air_defense")
								|| name.equals("land_tower_ground_defense")) {
							handleRequestUpgradeInfoResult(jsonData, soilid);
						} else if (name.equals("parade_ground")
								|| name.equals("archery_camp")
								|| name.equals("voodoo")
								|| name.equals("martial_club")
								|| name.equals("cavalry_camp")
								|| name.equals("army_arsenal")) {
							handleRequestUpgradeRecruitSoldierInfoResult(
									jsonData, soilid);
						} else if (name.equals("space_land_tower")) {
							handleSpaceLandTowerDialog(soilid);
						}
					} else if (actioncode == 15) {
						handleClickBuildingUpgrade(jsonData);
					} else if (actioncode == 16) {
						handleRequestRecruitSoldierResult(jsonData);
					}
				}
				break;
			}
			try {
				thread.join();
			} catch (InterruptedException e) {
			}
			super.handleMessage(msg);
		}
	};

	class ActivityThread extends Thread {

		/** ③⑴腔JSON趼睫揹 */
		private String jsonStr;

		/** ③⑴督昢傷褐掛恅璃 */
		private String url;

		/** 絞ヶ③⑴腔華瘍 */
		private int soilid;

		/**
		 * ③⑴雄釬 12 傑惜場宎趙 14 膘耟汔撰 15 膘耟奪燴珜醱ㄗ萸僻膘耟腔※汔撰§偌聽ㄘ 16
		 * 膘耟笢湍桸躁尪條腔ㄗ萸僻桸躁尪條腔※桸躁§偌聽ㄘ
		 */
		private int actioncode = 14;

		ActivityThread(String jsonStr, String url, int soilid, int actioncode) {
			super();
			this.jsonStr = jsonStr;
			this.url = url;
			this.soilid = soilid;
			this.actioncode = actioncode;
		}

		@Override
		public void run() {

			HttpClient httpclient = new DefaultHttpClient();
			HttpPost httppost = new HttpPost(AppUtil.URL_PREFIX + url);
			try {
				StringEntity se = new StringEntity(jsonStr);
				httppost.setEntity(se);

				HttpResponse response = httpclient.execute(httppost);
				HttpEntity entityOut = response.getEntity();

				if (entityOut != null) {
					BufferedReader br = new BufferedReader(
							new InputStreamReader(entityOut.getContent(),
									"utf-8"));
					StringBuffer sb = new StringBuffer();
					String line;
					while ((line = br.readLine()) != null) {
						sb.append(line);
					}
					Map data = new HashMap();
					data.put("soilid", soilid);
					data.put("actioncode", actioncode);
					data.put("jsonData", sb == null ? "" : sb.toString());
					Message lmsg = new Message();
					lmsg.obj = data;
					lmsg.what = 0;// 測桶傖髡
					handler.sendMessage(lmsg);
				}

			} catch (Exception e) {
				AppUtil.button1Dialog(HolyWarScene.this.getContext(), "厙釐祑都渣昫ㄐ");
				handler.sendEmptyMessage(-1);
			}

		}
	}

}
